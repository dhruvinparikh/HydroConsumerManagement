/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.client;

import com.model.*;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author imsil
 */
public class ReplaceGUI extends javax.swing.JPanel {

    /**
     * Creates new form ReplaceGUI
     */
    DefaultTableModel model = null;
    ObjectOutputStream outputObjectToServer = null;
    ObjectInputStream inputObjectFromServer = null;
    DataOutputStream outputDataToServer = null;
    DataInputStream inputDataFromServer = null;
    PrintStream printStream = null;

    public ReplaceGUI() {
        initComponents();
        Object[] columns = {"Consumer Id", "First Name", "Last Name", "City", "Bill Amount", "Due Date"};
        model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        // set the model to the table
        consumerTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtConsumerID = new javax.swing.JTextField();
        btnReplace = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnDisplay = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        consumerTable = new javax.swing.JTable();

        txtConsumerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsumerIDActionPerformed(evt);
            }
        });
        txtConsumerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsumerIDKeyPressed(evt);
            }
        });

        btnReplace.setText("Change");
        btnReplace.setEnabled(false);
        btnReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplaceActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Name", "Last Name", "City" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });

        jLabel1.setText("Consumer ID :");

        btnDisplay.setText("Display");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        consumerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(consumerTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtConsumerID, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(txtName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDisplay)
                            .addComponent(btnReplace))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(btnClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsumerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReplace)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtConsumerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsumerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsumerIDActionPerformed

    private void btnReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplaceActionPerformed
        InitTable();
        try {
            outputObjectToServer = IOUtility.getObjectOutputStream();
            inputObjectFromServer = IOUtility.getObjectInputStream();
            outputDataToServer = IOUtility.getDataOutputStream();
            inputDataFromServer = IOUtility.getDataInputStream();
            printStream = IOUtility.getPrintStream();
        } catch (UnableToConnectException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        switch (jComboBox1.getSelectedIndex()) {
            case 0: {
                try {
                    outputDataToServer.writeInt(23);
                    outputDataToServer.flush();
                    printStream.println(txtName.getText());
                    printStream.flush();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            break;
            case 1: {
                try {
                    outputDataToServer.writeInt(24);
                    outputDataToServer.flush();
                    printStream.println(txtName.getText());
                    printStream.flush();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            break;
            case 2: {
                try {
                    outputDataToServer.writeInt(25);
                    outputDataToServer.flush();
                    printStream.println(txtName.getText());
                    printStream.flush();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
            break;
        }
        try {
            Object row[][] = CreateTable.getRow((List<Consumer>) inputObjectFromServer.readObject());
            if (row.length == 0) {
                throw new NoRecordException();
            }
            for (int i = 0; i < row.length; i++) {
                model.addRow(row[i]);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (NoRecordException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnReplaceActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.setTxtConsumerID("");
        this.setTxtName("");
        this.InitTable();
        this.setBtnDisplay(true);
        this.setBtnReplace(false);
        this.txtConsumerID.setEditable(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        // TODO add your handling code here:
        InitTable();
        try {
            outputObjectToServer = IOUtility.getObjectOutputStream();
            inputObjectFromServer = IOUtility.getObjectInputStream();
            outputDataToServer = IOUtility.getDataOutputStream();
            inputDataFromServer = IOUtility.getDataInputStream();
            printStream = IOUtility.getPrintStream();
        } catch (UnableToConnectException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        if (Long.parseLong(txtConsumerID.getText()) > 9999999999L && Long.parseLong(txtConsumerID.getText()) < 100000000000L) {
            try {
                outputDataToServer.writeInt(9);
                outputDataToServer.flush();
                outputDataToServer.writeLong(Long.parseLong(txtConsumerID.getText()));
                outputDataToServer.flush();
                Object[][] row = CreateTable.getRow((List<Consumer>) inputObjectFromServer.readObject());
                if (row.length == 0) {
                    throw new NoRecordException();
                } else {
                    txtConsumerID.setEditable(false);
                    btnDisplay.setEnabled(false);
                    btnReplace.setEnabled(true);
                }
                for (int i = 0; i < row.length; i++) {
                    model.addRow(row[i]);
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ex);
            } catch (NoRecordException ex) {
                JOptionPane.showMessageDialog(null, ex);
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(null, "No Such record found");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ConsumerID must be 11 digits");
        }

    }//GEN-LAST:event_btnDisplayActionPerformed

    private void txtConsumerIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsumerIDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            btnDisplayActionPerformed(null);
        }
    }//GEN-LAST:event_txtConsumerIDKeyPressed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            btnReplaceActionPerformed(null);
        }
    }//GEN-LAST:event_txtNameKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnReplace;
    private javax.swing.JTable consumerTable;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtConsumerID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public void setTxtConsumerID(String txtConsumerID) {
        this.txtConsumerID.setText(txtConsumerID);
    }

    public void setTxtConsumerIDEditable(boolean txtConsumerID) {
        this.txtConsumerID.setEditable(txtConsumerID);
    }

    public void setTxtName(String txtName) {
        this.txtName.setText(txtName);
    }

    public void setBtnDisplay(Boolean btnDisplay) {
        this.btnDisplay.setEnabled(btnDisplay);
    }

    public void setBtnReplace(Boolean btnReplace) {
        this.btnReplace.setEnabled(btnReplace);
    }

    public void InitTable() {
        int c = model.getRowCount();
        for (int i = c - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
}
